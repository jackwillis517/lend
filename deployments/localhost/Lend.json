{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "addNewBorrower",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "borrowLiquidity",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "checkBorrowCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "checkBorrowDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimInterest",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundContract",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "person",
          "type": "address"
        }
      ],
      "name": "isBlacklisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lender",
          "type": "address"
        }
      ],
      "name": "isTime",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "makePayment",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provideLiquidity",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "removeUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "viewCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "viewContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "viewDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "viewJtokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "viewLiquidityTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "viewWorthiness",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x49a0dea8f7c0928653423a1a57c115a0e5aada3618df38284fbfd6a9407bc8c3",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1998330",
    "logsBloom": "0x
    "blockHash": "0x47f449157993c8c3e55ed07cf74afbd1e85c94e64d57a4729b78d437594b97b1",
    "transactionHash": "0x49a0dea8f7c0928653423a1a57c115a0e5aada3618df38284fbfd6a9407bc8c3",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1998330",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "87bfda6557477a1025b3354d2d1b3261",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"addNewBorrower\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"borrowLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"checkBorrowCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"checkBorrowDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimInterest\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundContract\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"person\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"}],\"name\":\"isTime\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"makePayment\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"provideLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewJtokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewLiquidityTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewWorthiness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lend.sol\":\"Lend\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Lend.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.7.0 <0.9.0; \\r\\n\\r\\ncontract Lend {\\r\\n    uint256 LendJTokenBalance = 1000000000000;\\r\\n    mapping (address => uint256) Worthiness;\\r\\n    mapping (address => uint256) Staked;\\r\\n    mapping (address => uint256) TimeStaked;\\r\\n    mapping (address => uint256) Borrowed;\\r\\n    mapping (address => uint256) Debt;\\r\\n    mapping (address => uint256) Collateral;\\r\\n    mapping (address => bool) Blacklist;  \\r\\n\\r\\n    //-------------------------------Utility functions-------------------------------//\\r\\n    receive() external payable {}\\r\\n\\r\\n    fallback() external payable {}\\r\\n\\r\\n    // Adds a new borrower to the system with an initial worthiness of 500\\r\\n    function addNewBorrower() public {\\r\\n        require(Worthiness[msg.sender] == 0, \\\"This user is already registered.\\\");\\r\\n        Worthiness[msg.sender] = 500;\\r\\n    }\\r\\n\\r\\n    // Checks if a minute has passed since a lender has provided liquidity\\r\\n    function isTime(address lender) public view returns (bool) {\\r\\n        if(block.timestamp >= TimeStaked[lender] + 60) {\\r\\n            return true;\\r\\n        } else {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function isBlacklisted(address person) public view returns (bool) {\\r\\n        return Blacklist[person];\\r\\n    }\\r\\n\\r\\n    function fundContract() public payable {\\r\\n        payable(address(this)).transfer(msg.value);\\r\\n    }\\r\\n\\r\\n\\r\\n    //-------------------------------View functions-------------------------------//\\r\\n    // Allows a borrower to view their current worthiness\\r\\n    function viewWorthiness() public view returns (uint256) {\\r\\n        require(Worthiness[msg.sender] > 0, \\\"User not found.\\\");\\r\\n        return Worthiness[msg.sender];\\r\\n    }\\r\\n\\r\\n    // Allows a lender to view their current Jtoken balance\\r\\n    function viewJtokenBalance() public view returns (uint256) {\\r\\n        return Staked[msg.sender];\\r\\n    }\\r\\n\\r\\n    function viewLiquidityTime() public view returns (uint256) {\\r\\n        return TimeStaked[msg.sender];\\r\\n    }\\r\\n\\r\\n    function viewContractBalance() public view returns (uint256) {\\r\\n        return LendJTokenBalance; \\r\\n    }\\r\\n\\r\\n    function viewCollateral() public view returns (uint256) {\\r\\n        return Collateral[msg.sender];\\r\\n    } \\r\\n\\r\\n    function viewDebt() public view returns (uint256) {\\r\\n        return Debt[msg.sender];\\r\\n    }\\r\\n\\r\\n    function removeUser() public {\\r\\n        Worthiness[msg.sender] = 0;\\r\\n    }\\r\\n\\r\\n\\r\\n    //-------------------------------Lending workflow-------------------------------//\\r\\n    // Allows a lender to provide liquidity to Lend in return for redeemable interest tokens\\r\\n    // A lender can only lend once for now and each JToken is worth 2 ETH for now\\r\\n    function provideLiquidity() public payable {\\r\\n        require(LendJTokenBalance > 0, \\\"Lend is out of redeemable tokens at this time.\\\");\\r\\n        require(Staked[msg.sender] == 0, \\\"You have already provided liquidity and must wait to do it again.\\\");\\r\\n        Staked[msg.sender] += msg.value / 1e18;\\r\\n        LendJTokenBalance -= msg.value / 1e18;\\r\\n        TimeStaked[msg.sender] = block.timestamp;\\r\\n        payable(address(this)).transfer(msg.value); \\r\\n    }\\r\\n\\r\\n    // Allows a lender to claim their interest token's value after the loan expires\\r\\n    // Right now a loan expires after a minute, ideally I'd like to add a more robust\\r\\n    // liquidation scheme in the future based on time and value from a price oracle\\r\\n    function claimInterest() public payable {\\r\\n        require(isTime(msg.sender), \\\"You need to wait until the loan expires.\\\");\\r\\n        require(Staked[msg.sender] > 0, \\\"No liquidity was provided to collect interest on.\\\");\\r\\n        LendJTokenBalance += Staked[msg.sender];\\r\\n        payable(msg.sender).transfer((Staked[msg.sender] * 2) * 1e18); \\r\\n        Staked[msg.sender] = 0;\\r\\n    } \\r\\n\\r\\n\\r\\n    //-------------------------------Borrowing workflow-------------------------------//\\r\\n    // Allows a borrow to see how much collateral and debt would be incurred to borrow a specific amount\\r\\n    function checkBorrowDebt (uint256 amount) public view returns (uint256) {\\r\\n        require(Blacklist[msg.sender] != true, \\\"This borrower cannot be trusted, loan denied.\\\");\\r\\n        require(Worthiness[msg.sender] > 0, \\\"This user hasn't registered yet, please register your wallet.\\\");\\r\\n        require(Debt[msg.sender] == 0, \\\"This person has already borrowed ether.\\\");\\r\\n        uint256 amountInEther = amount * 1e18;\\r\\n\\r\\n        // Debt & Collateral are recorded in Finney because of fractional values\\r\\n        // Debt = (1 + (worthiness/1000)) * amount borrowed\\r\\n        // Collateral = (worthiness/1000) * amount borrowed\\r\\n        uint256 projectedDebt = ((1000 + Worthiness[msg.sender]) * (amountInEther / 1e15)) / 1e3;\\r\\n        return projectedDebt;\\r\\n    }\\r\\n\\r\\n    function checkBorrowCollateral (uint256 amount) public view returns (uint256) {\\r\\n        require(Blacklist[msg.sender] != true, \\\"This borrower cannot be trusted, loan denied.\\\");\\r\\n        require(Worthiness[msg.sender] > 0, \\\"This user hasn't registered yet, please register your wallet.\\\");\\r\\n        require(Debt[msg.sender] == 0, \\\"This person has already borrowed ether.\\\");\\r\\n        uint256 amountInEther = amount * 1e18;\\r\\n\\r\\n        // Debt & Collateral are recorded in Finney because of fractional values\\r\\n        // Debt = (1 + (worthiness/1000)) * amount borrowed\\r\\n        // Collateral = (worthiness/1000) * amount borrowed\\r\\n        uint256 projectedCollateral = ((Worthiness[msg.sender]) * (amountInEther / 1e15)) / 1e3;\\r\\n        return projectedCollateral;\\r\\n    }\\r\\n    \\r\\n    // Allows a borrower to borrow ether from the protocol\\r\\n    function borrowLiquidity (uint256 amount) public payable returns (bool) {\\r\\n        require(Blacklist[msg.sender] != true, \\\"This borrower cannot be trusted, loan denied.\\\");\\r\\n        require(Worthiness[msg.sender] > 0, \\\"This user hasn't registered yet, please register your wallet.\\\");\\r\\n        require(Debt[msg.sender] == 0, \\\"This person has already borrowed ether.\\\");\\r\\n        uint256 amountInEther = amount * 1e18;\\r\\n        require((msg.value / 1e15) == ((Worthiness[msg.sender]) * (amountInEther / 1e15)) / 1e3, \\\"The amount of collateral isn't enough.\\\");\\r\\n        Borrowed[msg.sender] = block.timestamp;\\r\\n        \\r\\n\\r\\n        // Debt & Collateral are recorded in Finney because of fractional values\\r\\n        // Debt = (1 + (worthiness/1000)) * amount borrowed\\r\\n        // Collateral = (worthiness/1000) * amount borrowed\\r\\n        // Record the amount a borrower has to repay with interest in FINNEY\\r\\n        Debt[msg.sender] = ((1000 + Worthiness[msg.sender]) * (amountInEther / 1e15)) / 1e3;\\r\\n\\r\\n        // Record the amount a borrower must provide as collateral in order to borrow in FINNEY\\r\\n        Collateral[msg.sender] = ((Worthiness[msg.sender]) * (amountInEther / 1e15)) / 1e3;\\r\\n\\r\\n\\r\\n        // Transfer the required collateral from the borrower to the contract\\r\\n        payable(address(this)).transfer(msg.value);\\r\\n                               \\r\\n        // Transfer the desired borrow amount to the borrower\\r\\n        payable(msg.sender).transfer(amountInEther);\\r\\n\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n    \\r\\n    // Allows a borrower to pay off their debt\\r\\n    function makePayment() public payable returns (bool) {\\r\\n        require(Debt[msg.sender] > 0, \\\"The loan is already paid off.\\\");\\r\\n\\r\\n        if(block.timestamp <= Borrowed[msg.sender] + 60){\\r\\n            // Update the users debt\\r\\n            Debt[msg.sender] -= (msg.value / 1e15);\\r\\n            payable(address(this)).transfer(msg.value);\\r\\n\\r\\n            // If the user settles all of their debt then return their collateral and halve their worthiness\\r\\n            if(Debt[msg.sender] == 0){\\r\\n                payable(msg.sender).transfer(Collateral[msg.sender] * 1e15);\\r\\n                Worthiness[msg.sender] = Worthiness[msg.sender] / 2;\\r\\n\\r\\n                // Ensure their Worthiness doesn't drop below 50\\r\\n                if(Worthiness[msg.sender] < 50){\\r\\n                    Worthiness[msg.sender] = 50;\\r\\n                }\\r\\n            }\\r\\n\\r\\n          // If the user attempts to make a payment after the loan expires double their worthiness\\r\\n          // If their worthiness exceeds 1000 mark them blacklisted\\r\\n          // Reset the users Collateral and Debt obligation\\r\\n        } else {\\r\\n            Collateral[msg.sender] = 0;\\r\\n            Debt[msg.sender] = 0;\\r\\n            Worthiness[msg.sender] = Worthiness[msg.sender] * 2;\\r\\n            if(Worthiness[msg.sender] >= 1000){\\r\\n                Blacklist[msg.sender] = true;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x564ac154e00b5bbf9c54e355628375d600c9a2af4068798e9f089ef79d9b71b2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405264e8d4a5100060005534801561001957600080fd5b506122f4806100296000396000f3fe6080604052600436106101015760003560e01c8063bad3d2b311610095578063d8d7970011610064578063d8d79700146102bb578063e9be4a70146102d9578063ee00f82514610316578063f944f4c714610346578063fe575a871461035d57610108565b8063bad3d2b31461021e578063bd097e2114610249578063c31aa06214610253578063d7acafba1461029057610108565b806359eec95b116100d157806359eec95b146101815780635c8de34c146101be57806360c97b22146101e9578063a221f1e5146101f357610108565b8062ce1f4f1461010a5780630ada8ffd1461013557806335981fd8146101605780633fab6df31461016a57610108565b3661010857005b005b34801561011657600080fd5b5061011f61039a565b60405161012c9190611d8b565b60405180910390f35b34801561014157600080fd5b5061014a6103e1565b6040516101579190611d8b565b60405180910390f35b6101686104a9565b005b34801561017657600080fd5b5061017f6106b5565b005b34801561018d57600080fd5b506101a860048036038101906101a39190611a17565b61077f565b6040516101b59190611c10565b60405180910390f35b3480156101ca57600080fd5b506101d36107e6565b6040516101e09190611d8b565b60405180910390f35b6101f16107ef565b005b3480156101ff57600080fd5b506102086109d6565b6040516102159190611d8b565b60405180910390f35b34801561022a57600080fd5b50610233610a1d565b6040516102409190611d8b565b60405180910390f35b610251610a64565b005b34801561025f57600080fd5b5061027a60048036038101906102759190611a44565b610aad565b6040516102879190611d8b565b60405180910390f35b34801561029c57600080fd5b506102a5610ce4565b6040516102b29190611d8b565b60405180910390f35b6102c3610d2b565b6040516102d09190611c10565b60405180910390f35b3480156102e557600080fd5b5061030060048036038101906102fb9190611a44565b611274565b60405161030d9190611d8b565b60405180910390f35b610330600480360381019061032b9190611a44565b61149e565b60405161033d9190611c10565b60405180910390f35b34801561035257600080fd5b5061035b611950565b005b34801561036957600080fd5b50610384600480360381019061037f9190611a17565b611997565b6040516103919190611c10565b60405180910390f35b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610464576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045b90611cab565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6104b23361077f565b6104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e890611d2b565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610573576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056a90611ccb565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546000808282546105c39190611db7565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a764000060028060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106389190611e3e565b6106429190611e3e565b9081150290604051600060405180830381858888f1935050505015801561066d573d6000803e3d6000fd5b506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610737576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072e90611d4b565b60405180910390fd5b6101f4600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000603c600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107cd9190611db7565b42106107dc57600190506107e1565b600090505b919050565b60008054905090565b6000805411610833576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082a90611d6b565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146108b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ac90611c2b565b60405180910390fd5b670de0b6b3a7640000346108c99190611e0d565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109179190611db7565b92505081905550670de0b6b3a7640000346109329190611e0d565b6000808282546109429190611e98565b9250508190555042600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156109d3573d6000803e3d6000fd5b50565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b3073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610aaa573d6000803e3d6000fd5b50565b600060011515600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415610b43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3a90611c8b565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610bc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbc90611c4b565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610c47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3e90611d0b565b60405180910390fd5b6000670de0b6b3a764000083610c5d9190611e3e565b905060006103e866038d7ea4c6800083610c779190611e0d565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103e8610cc49190611db7565b610cce9190611e3e565b610cd89190611e0d565b90508092505050919050565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610dae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da590611ceb565b60405180910390fd5b603c600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610dfa9190611db7565b42116110b25766038d7ea4c6800034610e139190611e0d565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e619190611e98565b925050819055503073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610eae573d6000803e3d6000fd5b506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156110ad573373ffffffffffffffffffffffffffffffffffffffff166108fc66038d7ea4c68000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f639190611e3e565b9081150290604051600060405180830381858888f19350505050158015610f8e573d6000803e3d6000fd5b506002600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fdb9190611e0d565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506032600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156110ac576032600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b61126d565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506002600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111889190611e3e565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506103e8600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541061126c576001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5b6001905090565b600060011515600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141561130a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130190611c8b565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161138c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138390611c4b565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461140e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140590611d0b565b60405180910390fd5b6000670de0b6b3a7640000836114249190611e3e565b905060006103e866038d7ea4c680008361143e9190611e0d565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114889190611e3e565b6114929190611e0d565b90508092505050919050565b600060011515600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415611534576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152b90611c8b565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116115b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ad90611c4b565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611638576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162f90611d0b565b60405180910390fd5b6000670de0b6b3a76400008361164e9190611e3e565b90506103e866038d7ea4c68000826116669190611e0d565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116b09190611e3e565b6116ba9190611e0d565b66038d7ea4c68000346116cd9190611e0d565b1461170d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170490611c6b565b60405180910390fd5b42600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506103e866038d7ea4c68000826117679190611e0d565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103e86117b49190611db7565b6117be9190611e3e565b6117c89190611e0d565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506103e866038d7ea4c68000826118219190611e0d565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461186b9190611e3e565b6118759190611e0d565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156118fe573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611945573d6000803e3d6000fd5b506001915050919050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000813590506119fc81612290565b92915050565b600081359050611a11816122a7565b92915050565b600060208284031215611a2d57611a2c611f72565b5b6000611a3b848285016119ed565b91505092915050565b600060208284031215611a5a57611a59611f72565b5b6000611a6884828501611a02565b91505092915050565b611a7a81611ede565b82525050565b6000611a8d604183611da6565b9150611a9882611f77565b606082019050919050565b6000611ab0603d83611da6565b9150611abb82611fec565b604082019050919050565b6000611ad3602683611da6565b9150611ade8261203b565b604082019050919050565b6000611af6602d83611da6565b9150611b018261208a565b604082019050919050565b6000611b19600f83611da6565b9150611b24826120d9565b602082019050919050565b6000611b3c603183611da6565b9150611b4782612102565b604082019050919050565b6000611b5f601d83611da6565b9150611b6a82612151565b602082019050919050565b6000611b82602783611da6565b9150611b8d8261217a565b604082019050919050565b6000611ba5602883611da6565b9150611bb0826121c9565b604082019050919050565b6000611bc8602083611da6565b9150611bd382612218565b602082019050919050565b6000611beb602e83611da6565b9150611bf682612241565b604082019050919050565b611c0a81611f0a565b82525050565b6000602082019050611c256000830184611a71565b92915050565b60006020820190508181036000830152611c4481611a80565b9050919050565b60006020820190508181036000830152611c6481611aa3565b9050919050565b60006020820190508181036000830152611c8481611ac6565b9050919050565b60006020820190508181036000830152611ca481611ae9565b9050919050565b60006020820190508181036000830152611cc481611b0c565b9050919050565b60006020820190508181036000830152611ce481611b2f565b9050919050565b60006020820190508181036000830152611d0481611b52565b9050919050565b60006020820190508181036000830152611d2481611b75565b9050919050565b60006020820190508181036000830152611d4481611b98565b9050919050565b60006020820190508181036000830152611d6481611bbb565b9050919050565b60006020820190508181036000830152611d8481611bde565b9050919050565b6000602082019050611da06000830184611c01565b92915050565b600082825260208201905092915050565b6000611dc282611f0a565b9150611dcd83611f0a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611e0257611e01611f14565b5b828201905092915050565b6000611e1882611f0a565b9150611e2383611f0a565b925082611e3357611e32611f43565b5b828204905092915050565b6000611e4982611f0a565b9150611e5483611f0a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611e8d57611e8c611f14565b5b828202905092915050565b6000611ea382611f0a565b9150611eae83611f0a565b925082821015611ec157611ec0611f14565b5b828203905092915050565b6000611ed782611eea565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f596f75206861766520616c72656164792070726f7669646564206c697175696460008201527f69747920616e64206d757374207761697420746f20646f20697420616761696e60208201527f2e00000000000000000000000000000000000000000000000000000000000000604082015250565b7f546869732075736572206861736e27742072656769737465726564207965742c60008201527f20706c6561736520726567697374657220796f75722077616c6c65742e000000602082015250565b7f54686520616d6f756e74206f6620636f6c6c61746572616c2069736e2774206560008201527f6e6f7567682e0000000000000000000000000000000000000000000000000000602082015250565b7f5468697320626f72726f7765722063616e6e6f7420626520747275737465642c60008201527f206c6f616e2064656e6965642e00000000000000000000000000000000000000602082015250565b7f55736572206e6f7420666f756e642e0000000000000000000000000000000000600082015250565b7f4e6f206c6971756964697479207761732070726f766964656420746f20636f6c60008201527f6c65637420696e746572657374206f6e2e000000000000000000000000000000602082015250565b7f546865206c6f616e20697320616c72656164792070616964206f66662e000000600082015250565b7f5468697320706572736f6e2068617320616c726561647920626f72726f77656460008201527f2065746865722e00000000000000000000000000000000000000000000000000602082015250565b7f596f75206e65656420746f207761697420756e74696c20746865206c6f616e2060008201527f657870697265732e000000000000000000000000000000000000000000000000602082015250565b7f54686973207573657220697320616c726561647920726567697374657265642e600082015250565b7f4c656e64206973206f7574206f662072656465656d61626c6520746f6b656e7360008201527f20617420746869732074696d652e000000000000000000000000000000000000602082015250565b61229981611ecc565b81146122a457600080fd5b50565b6122b081611f0a565b81146122bb57600080fd5b5056fea2646970667358221220ff609dccc48456c406894a4059f66a0f505a56c85e5e83f5448588d6e3f9e31b64736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106101015760003560e01c8063bad3d2b311610095578063d8d7970011610064578063d8d79700146102bb578063e9be4a70146102d9578063ee00f82514610316578063f944f4c714610346578063fe575a871461035d57610108565b8063bad3d2b31461021e578063bd097e2114610249578063c31aa06214610253578063d7acafba1461029057610108565b806359eec95b116100d157806359eec95b146101815780635c8de34c146101be57806360c97b22146101e9578063a221f1e5146101f357610108565b8062ce1f4f1461010a5780630ada8ffd1461013557806335981fd8146101605780633fab6df31461016a57610108565b3661010857005b005b34801561011657600080fd5b5061011f61039a565b60405161012c9190611d8b565b60405180910390f35b34801561014157600080fd5b5061014a6103e1565b6040516101579190611d8b565b60405180910390f35b6101686104a9565b005b34801561017657600080fd5b5061017f6106b5565b005b34801561018d57600080fd5b506101a860048036038101906101a39190611a17565b61077f565b6040516101b59190611c10565b60405180910390f35b3480156101ca57600080fd5b506101d36107e6565b6040516101e09190611d8b565b60405180910390f35b6101f16107ef565b005b3480156101ff57600080fd5b506102086109d6565b6040516102159190611d8b565b60405180910390f35b34801561022a57600080fd5b50610233610a1d565b6040516102409190611d8b565b60405180910390f35b610251610a64565b005b34801561025f57600080fd5b5061027a60048036038101906102759190611a44565b610aad565b6040516102879190611d8b565b60405180910390f35b34801561029c57600080fd5b506102a5610ce4565b6040516102b29190611d8b565b60405180910390f35b6102c3610d2b565b6040516102d09190611c10565b60405180910390f35b3480156102e557600080fd5b5061030060048036038101906102fb9190611a44565b611274565b60405161030d9190611d8b565b60405180910390f35b610330600480360381019061032b9190611a44565b61149e565b60405161033d9190611c10565b60405180910390f35b34801561035257600080fd5b5061035b611950565b005b34801561036957600080fd5b50610384600480360381019061037f9190611a17565b611997565b6040516103919190611c10565b60405180910390f35b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610464576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045b90611cab565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6104b23361077f565b6104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e890611d2b565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610573576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056a90611ccb565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546000808282546105c39190611db7565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a764000060028060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106389190611e3e565b6106429190611e3e565b9081150290604051600060405180830381858888f1935050505015801561066d573d6000803e3d6000fd5b506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610737576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072e90611d4b565b60405180910390fd5b6101f4600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000603c600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107cd9190611db7565b42106107dc57600190506107e1565b600090505b919050565b60008054905090565b6000805411610833576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082a90611d6b565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146108b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ac90611c2b565b60405180910390fd5b670de0b6b3a7640000346108c99190611e0d565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109179190611db7565b92505081905550670de0b6b3a7640000346109329190611e0d565b6000808282546109429190611e98565b9250508190555042600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156109d3573d6000803e3d6000fd5b50565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b3073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610aaa573d6000803e3d6000fd5b50565b600060011515600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415610b43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3a90611c8b565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610bc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbc90611c4b565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610c47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3e90611d0b565b60405180910390fd5b6000670de0b6b3a764000083610c5d9190611e3e565b905060006103e866038d7ea4c6800083610c779190611e0d565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103e8610cc49190611db7565b610cce9190611e3e565b610cd89190611e0d565b90508092505050919050565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610dae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da590611ceb565b60405180910390fd5b603c600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610dfa9190611db7565b42116110b25766038d7ea4c6800034610e139190611e0d565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e619190611e98565b925050819055503073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610eae573d6000803e3d6000fd5b506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156110ad573373ffffffffffffffffffffffffffffffffffffffff166108fc66038d7ea4c68000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f639190611e3e565b9081150290604051600060405180830381858888f19350505050158015610f8e573d6000803e3d6000fd5b506002600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fdb9190611e0d565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506032600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156110ac576032600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b61126d565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506002600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111889190611e3e565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506103e8600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541061126c576001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5b6001905090565b600060011515600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141561130a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130190611c8b565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161138c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138390611c4b565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461140e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140590611d0b565b60405180910390fd5b6000670de0b6b3a7640000836114249190611e3e565b905060006103e866038d7ea4c680008361143e9190611e0d565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114889190611e3e565b6114929190611e0d565b90508092505050919050565b600060011515600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415611534576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152b90611c8b565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116115b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ad90611c4b565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611638576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162f90611d0b565b60405180910390fd5b6000670de0b6b3a76400008361164e9190611e3e565b90506103e866038d7ea4c68000826116669190611e0d565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116b09190611e3e565b6116ba9190611e0d565b66038d7ea4c68000346116cd9190611e0d565b1461170d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170490611c6b565b60405180910390fd5b42600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506103e866038d7ea4c68000826117679190611e0d565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103e86117b49190611db7565b6117be9190611e3e565b6117c89190611e0d565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506103e866038d7ea4c68000826118219190611e0d565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461186b9190611e3e565b6118759190611e0d565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156118fe573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611945573d6000803e3d6000fd5b506001915050919050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000813590506119fc81612290565b92915050565b600081359050611a11816122a7565b92915050565b600060208284031215611a2d57611a2c611f72565b5b6000611a3b848285016119ed565b91505092915050565b600060208284031215611a5a57611a59611f72565b5b6000611a6884828501611a02565b91505092915050565b611a7a81611ede565b82525050565b6000611a8d604183611da6565b9150611a9882611f77565b606082019050919050565b6000611ab0603d83611da6565b9150611abb82611fec565b604082019050919050565b6000611ad3602683611da6565b9150611ade8261203b565b604082019050919050565b6000611af6602d83611da6565b9150611b018261208a565b604082019050919050565b6000611b19600f83611da6565b9150611b24826120d9565b602082019050919050565b6000611b3c603183611da6565b9150611b4782612102565b604082019050919050565b6000611b5f601d83611da6565b9150611b6a82612151565b602082019050919050565b6000611b82602783611da6565b9150611b8d8261217a565b604082019050919050565b6000611ba5602883611da6565b9150611bb0826121c9565b604082019050919050565b6000611bc8602083611da6565b9150611bd382612218565b602082019050919050565b6000611beb602e83611da6565b9150611bf682612241565b604082019050919050565b611c0a81611f0a565b82525050565b6000602082019050611c256000830184611a71565b92915050565b60006020820190508181036000830152611c4481611a80565b9050919050565b60006020820190508181036000830152611c6481611aa3565b9050919050565b60006020820190508181036000830152611c8481611ac6565b9050919050565b60006020820190508181036000830152611ca481611ae9565b9050919050565b60006020820190508181036000830152611cc481611b0c565b9050919050565b60006020820190508181036000830152611ce481611b2f565b9050919050565b60006020820190508181036000830152611d0481611b52565b9050919050565b60006020820190508181036000830152611d2481611b75565b9050919050565b60006020820190508181036000830152611d4481611b98565b9050919050565b60006020820190508181036000830152611d6481611bbb565b9050919050565b60006020820190508181036000830152611d8481611bde565b9050919050565b6000602082019050611da06000830184611c01565b92915050565b600082825260208201905092915050565b6000611dc282611f0a565b9150611dcd83611f0a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611e0257611e01611f14565b5b828201905092915050565b6000611e1882611f0a565b9150611e2383611f0a565b925082611e3357611e32611f43565b5b828204905092915050565b6000611e4982611f0a565b9150611e5483611f0a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611e8d57611e8c611f14565b5b828202905092915050565b6000611ea382611f0a565b9150611eae83611f0a565b925082821015611ec157611ec0611f14565b5b828203905092915050565b6000611ed782611eea565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f596f75206861766520616c72656164792070726f7669646564206c697175696460008201527f69747920616e64206d757374207761697420746f20646f20697420616761696e60208201527f2e00000000000000000000000000000000000000000000000000000000000000604082015250565b7f546869732075736572206861736e27742072656769737465726564207965742c60008201527f20706c6561736520726567697374657220796f75722077616c6c65742e000000602082015250565b7f54686520616d6f756e74206f6620636f6c6c61746572616c2069736e2774206560008201527f6e6f7567682e0000000000000000000000000000000000000000000000000000602082015250565b7f5468697320626f72726f7765722063616e6e6f7420626520747275737465642c60008201527f206c6f616e2064656e6965642e00000000000000000000000000000000000000602082015250565b7f55736572206e6f7420666f756e642e0000000000000000000000000000000000600082015250565b7f4e6f206c6971756964697479207761732070726f766964656420746f20636f6c60008201527f6c65637420696e746572657374206f6e2e000000000000000000000000000000602082015250565b7f546865206c6f616e20697320616c72656164792070616964206f66662e000000600082015250565b7f5468697320706572736f6e2068617320616c726561647920626f72726f77656460008201527f2065746865722e00000000000000000000000000000000000000000000000000602082015250565b7f596f75206e65656420746f207761697420756e74696c20746865206c6f616e2060008201527f657870697265732e000000000000000000000000000000000000000000000000602082015250565b7f54686973207573657220697320616c726561647920726567697374657265642e600082015250565b7f4c656e64206973206f7574206f662072656465656d61626c6520746f6b656e7360008201527f20617420746869732074696d652e000000000000000000000000000000000000602082015250565b61229981611ecc565b81146122a457600080fd5b50565b6122b081611f0a565b81146122bb57600080fd5b5056fea2646970667358221220ff609dccc48456c406894a4059f66a0f505a56c85e5e83f5448588d6e3f9e31b64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4,
        "contract": "contracts/Lend.sol:Lend",
        "label": "LendJTokenBalance",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 8,
        "contract": "contracts/Lend.sol:Lend",
        "label": "Worthiness",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 12,
        "contract": "contracts/Lend.sol:Lend",
        "label": "Staked",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 16,
        "contract": "contracts/Lend.sol:Lend",
        "label": "TimeStaked",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 20,
        "contract": "contracts/Lend.sol:Lend",
        "label": "Borrowed",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 24,
        "contract": "contracts/Lend.sol:Lend",
        "label": "Debt",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 28,
        "contract": "contracts/Lend.sol:Lend",
        "label": "Collateral",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 32,
        "contract": "contracts/Lend.sol:Lend",
        "label": "Blacklist",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}