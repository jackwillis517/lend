{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "addNewBorrower",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "borrowLiquidity",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "checkBorrow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimInterest",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundContract",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "person",
          "type": "address"
        }
      ],
      "name": "isBlacklisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lender",
          "type": "address"
        }
      ],
      "name": "isTime",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "makePayment",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provideLiquidity",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "viewCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "viewContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "viewDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "viewJtokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "viewLiquidityTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "viewWorthiness",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xf35c326a17eebeb59cd36e6bd97e340cf03de479e74acfe1a5f4a32a749b7f4c",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1875227",
    "logsBloom": "0x
    "blockHash": "0x49853721e732da52332a870d48d99102651ace1e0be220702ab498710c5d2844",
    "transactionHash": "0xf35c326a17eebeb59cd36e6bd97e340cf03de479e74acfe1a5f4a32a749b7f4c",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1875227",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "2736495120c942f39632be9962e23470",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"addNewBorrower\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"borrowLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"checkBorrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimInterest\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundContract\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"person\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"}],\"name\":\"isTime\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"makePayment\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"provideLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewJtokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewLiquidityTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewWorthiness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lend.sol\":\"Lend\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Lend.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.7.0 <0.9.0; \\r\\n\\r\\ncontract Lend {\\r\\n    uint256 LendJTokenBalance = 1000000000000;\\r\\n    mapping (address => uint256) Worthiness;\\r\\n    mapping (address => uint256) Staked;\\r\\n    mapping (address => uint256) TimeStaked;\\r\\n    mapping (address => uint256) Borrowed;\\r\\n    mapping (address => uint256) Debt;\\r\\n    mapping (address => uint256) Collateral;\\r\\n    mapping (address => bool) Blacklist;  \\r\\n\\r\\n    //-------------------------------Utility functions-------------------------------//\\r\\n    receive() external payable {}\\r\\n\\r\\n    fallback() external payable {}\\r\\n\\r\\n    // Adds a new borrower to the system with an initial worthiness of 500\\r\\n    function addNewBorrower() public {\\r\\n        require(Worthiness[msg.sender] == 0, \\\"This user is already registered.\\\");\\r\\n        Worthiness[msg.sender] = 500;\\r\\n    }\\r\\n\\r\\n    // Checks if a minute has passed since a lender has provided liquidity\\r\\n    function isTime(address lender) public view returns (bool) {\\r\\n        if(block.timestamp >= TimeStaked[lender] + 60) {\\r\\n            return true;\\r\\n        } else {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function isBlacklisted(address person) public view returns (bool) {\\r\\n        return Blacklist[person];\\r\\n    }\\r\\n\\r\\n    function fundContract() public payable {\\r\\n        payable(address(this)).transfer(msg.value);\\r\\n    }\\r\\n\\r\\n\\r\\n    //-------------------------------View functions-------------------------------//\\r\\n    // Allows a borrower to view their current worthiness\\r\\n    function viewWorthiness() public view returns (uint256) {\\r\\n        require(Worthiness[msg.sender] > 0, \\\"User not found.\\\");\\r\\n        return Worthiness[msg.sender];\\r\\n    }\\r\\n\\r\\n    // Allows a lender to view their current Jtoken balance\\r\\n    function viewJtokenBalance() public view returns (uint256) {\\r\\n        return Staked[msg.sender];\\r\\n    }\\r\\n\\r\\n    function viewLiquidityTime() public view returns (uint256) {\\r\\n        return TimeStaked[msg.sender];\\r\\n    }\\r\\n\\r\\n    function viewContractBalance() public view returns (uint256) {\\r\\n        return LendJTokenBalance; \\r\\n    }\\r\\n\\r\\n    function viewCollateral() public view returns (uint256) {\\r\\n        return Collateral[msg.sender];\\r\\n    } \\r\\n\\r\\n    function viewDebt() public view returns (uint256) {\\r\\n        return Debt[msg.sender];\\r\\n    }\\r\\n\\r\\n\\r\\n    //-------------------------------Lending workflow-------------------------------//\\r\\n    // Allows a lender to provide liquidity to Lend in return for redeemable interest tokens\\r\\n    // A lender can only lend once for now and each JToken is worth 2 ETH for now\\r\\n    function provideLiquidity() public payable {\\r\\n        require(LendJTokenBalance > 0, \\\"Lend is out of redeemable tokens at this time.\\\");\\r\\n        require(Staked[msg.sender] == 0, \\\"You have already provided liquidity and must wait to do it again.\\\");\\r\\n        Staked[msg.sender] += msg.value / 1e18;\\r\\n        LendJTokenBalance -= msg.value / 1e18;\\r\\n        TimeStaked[msg.sender] = block.timestamp;\\r\\n        payable(address(this)).transfer(msg.value); \\r\\n    }\\r\\n\\r\\n    // Allows a lender to claim their interest token's value after the loan expires\\r\\n    // Right now a loan expires after a minute, ideally I'd like to add a more robust\\r\\n    // liquidation scheme in the future based on time and value from a price oracle\\r\\n    function claimInterest() public payable {\\r\\n        require(isTime(msg.sender), \\\"You need to wait until the loan expires.\\\");\\r\\n        require(Staked[msg.sender] > 0, \\\"No liquidity was provided to collect interest on.\\\");\\r\\n        LendJTokenBalance += Staked[msg.sender];\\r\\n        payable(msg.sender).transfer((Staked[msg.sender] * 2) * 1e18); \\r\\n        Staked[msg.sender] = 0;\\r\\n    } \\r\\n\\r\\n\\r\\n    //-------------------------------Borrowing workflow-------------------------------//\\r\\n    // Allows a borrow to see how much collateral and debt would be incurred to borrow a specific amount\\r\\n    function checkBorrow (uint256 amount) public view returns (uint256, uint256) {\\r\\n        require(Blacklist[msg.sender] != true, \\\"This borrower cannot be trusted, loan denied.\\\");\\r\\n        require(Worthiness[msg.sender] > 0, \\\"This user hasn't registered yet, please register your wallet.\\\");\\r\\n        require(Debt[msg.sender] == 0, \\\"This person has already borrowed ether.\\\");\\r\\n        uint256 amountInEther = amount * 1e18;\\r\\n\\r\\n        // Debt & Collateral are recorded in Finney because of fractional values\\r\\n        // Debt = (1 + (worthiness/1000)) * amount borrowed\\r\\n        // Collateral = (worthiness/1000) * amount borrowed\\r\\n        uint256 projectedDebt = ((1000 + Worthiness[msg.sender]) * (amountInEther / 1e15)) / 1e3;\\r\\n        uint256 projectedCollateral = ((Worthiness[msg.sender]) * (amountInEther / 1e15)) / 1e3;\\r\\n\\r\\n        return (projectedDebt, projectedCollateral);\\r\\n    }\\r\\n    \\r\\n    // Allows a borrower to borrow ether from the protocol\\r\\n    function borrowLiquidity (uint256 amount) public payable returns (bool) {\\r\\n        require(Blacklist[msg.sender] != true, \\\"This borrower cannot be trusted, loan denied.\\\");\\r\\n        require(Worthiness[msg.sender] > 0, \\\"This user hasn't registered yet, please register your wallet.\\\");\\r\\n        require(Debt[msg.sender] == 0, \\\"This person has already borrowed ether.\\\");\\r\\n        uint256 amountInEther = amount * 1e18;\\r\\n        require((msg.value / 1e15) == ((Worthiness[msg.sender]) * (amountInEther / 1e15)) / 1e3, \\\"The amount of collateral isn't enough.\\\");\\r\\n        Borrowed[msg.sender] = block.timestamp;\\r\\n        \\r\\n\\r\\n        // Debt & Collateral are recorded in Finney because of fractional values\\r\\n        // Debt = (1 + (worthiness/1000)) * amount borrowed\\r\\n        // Collateral = (worthiness/1000) * amount borrowed\\r\\n        // Record the amount a borrower has to repay with interest in FINNEY\\r\\n        Debt[msg.sender] = ((1000 + Worthiness[msg.sender]) * (amountInEther / 1e15)) / 1e3;\\r\\n\\r\\n        // Record the amount a borrower must provide as collateral in order to borrow in FINNEY\\r\\n        Collateral[msg.sender] = ((Worthiness[msg.sender]) * (amountInEther / 1e15)) / 1e3;\\r\\n\\r\\n\\r\\n        // Transfer the required collateral from the borrower to the contract\\r\\n        payable(address(this)).transfer(msg.value);\\r\\n                               \\r\\n        // Transfer the desired borrow amount to the borrower\\r\\n        payable(msg.sender).transfer(amountInEther);\\r\\n\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n    \\r\\n    // Allows a borrower to pay off their debt\\r\\n    function makePayment() public payable returns (bool) {\\r\\n        require(Debt[msg.sender] > 0, \\\"The loan is already paid off.\\\");\\r\\n\\r\\n        if(block.timestamp <= Borrowed[msg.sender] + 60){\\r\\n            // Update the users debt\\r\\n            Debt[msg.sender] -= (msg.value / 1e15);\\r\\n            payable(address(this)).transfer(msg.value);\\r\\n\\r\\n            // If the user settles all of their debt then return their collateral and halve their worthiness\\r\\n            if(Debt[msg.sender] == 0){\\r\\n                payable(msg.sender).transfer(Collateral[msg.sender] * 1e15);\\r\\n                Worthiness[msg.sender] = Worthiness[msg.sender] / 2;\\r\\n\\r\\n                // Ensure their Worthiness doesn't drop below 50\\r\\n                if(Worthiness[msg.sender] < 50){\\r\\n                    Worthiness[msg.sender] = 50;\\r\\n                }\\r\\n            }\\r\\n\\r\\n          // If the user attempts to make a payment after the loan expires double their worthiness\\r\\n          // If their worthiness exceeds 1000 mark them blacklisted\\r\\n          // Reset the users Collateral and Debt obligation\\r\\n        } else {\\r\\n            Collateral[msg.sender] = 0;\\r\\n            Debt[msg.sender] = 0;\\r\\n            Worthiness[msg.sender] = Worthiness[msg.sender] * 2;\\r\\n            if(Worthiness[msg.sender] >= 1000){\\r\\n                Blacklist[msg.sender] = true;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x227e5aa7240339ebc59a787f83e953c991e9109d1202634b1e6d87c5ac31ad9f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405264e8d4a5100060005534801561001957600080fd5b506120b6806100296000396000f3fe6080604052600436106100eb5760003560e01c8063a221f1e51161008a578063d7acafba11610059578063d7acafba1461027b578063d8d79700146102a6578063ee00f825146102c4578063fe575a87146102f4576100f2565b8063a221f1e5146101dd578063bad3d2b314610208578063bd097e2114610233578063c667cd5d1461023d576100f2565b80633fab6df3116100c65780633fab6df31461015457806359eec95b1461016b5780635c8de34c146101a857806360c97b22146101d3576100f2565b8062ce1f4f146100f45780630ada8ffd1461011f57806335981fd81461014a576100f2565b366100f257005b005b34801561010057600080fd5b50610109610331565b6040516101169190611b24565b60405180910390f35b34801561012b57600080fd5b50610134610378565b6040516101419190611b24565b60405180910390f35b610152610440565b005b34801561016057600080fd5b5061016961064c565b005b34801561017757600080fd5b50610192600480360381019061018d91906117b0565b610716565b60405161019f91906119a9565b60405180910390f35b3480156101b457600080fd5b506101bd61077d565b6040516101ca9190611b24565b60405180910390f35b6101db610786565b005b3480156101e957600080fd5b506101f261096d565b6040516101ff9190611b24565b60405180910390f35b34801561021457600080fd5b5061021d6109b4565b60405161022a9190611b24565b60405180910390f35b61023b6109fb565b005b34801561024957600080fd5b50610264600480360381019061025f91906117dd565b610a44565b604051610272929190611b3f565b60405180910390f35b34801561028757600080fd5b50610290610cee565b60405161029d9190611b24565b60405180910390f35b6102ae610d35565b6040516102bb91906119a9565b60405180910390f35b6102de60048036038101906102d991906117dd565b61127e565b6040516102eb91906119a9565b60405180910390f35b34801561030057600080fd5b5061031b600480360381019061031691906117b0565b611730565b60405161032891906119a9565b60405180910390f35b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116103fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f290611a44565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b61044933610716565b610488576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047f90611ac4565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161050a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050190611a64565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460008082825461055a9190611b79565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a764000060028060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105cf9190611c00565b6105d99190611c00565b9081150290604051600060405180830381858888f19350505050158015610604573d6000803e3d6000fd5b506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146106ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c590611ae4565b60405180910390fd5b6101f4600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000603c600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107649190611b79565b42106107735760019050610778565b600090505b919050565b60008054905090565b60008054116107ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c190611b04565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461084c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610843906119c4565b60405180910390fd5b670de0b6b3a7640000346108609190611bcf565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108ae9190611b79565b92505081905550670de0b6b3a7640000346108c99190611bcf565b6000808282546108d99190611c5a565b9250508190555042600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561096a573d6000803e3d6000fd5b50565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b3073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610a41573d6000803e3d6000fd5b50565b60008060011515600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415610adb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad290611a24565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610b5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b54906119e4565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610bdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd690611aa4565b60405180910390fd5b6000670de0b6b3a764000084610bf59190611c00565b905060006103e866038d7ea4c6800083610c0f9190611bcf565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103e8610c5c9190611b79565b610c669190611c00565b610c709190611bcf565b905060006103e866038d7ea4c6800084610c8a9190611bcf565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cd49190611c00565b610cde9190611bcf565b9050818194509450505050915091565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610db8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610daf90611a84565b60405180910390fd5b603c600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e049190611b79565b42116110bc5766038d7ea4c6800034610e1d9190611bcf565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e6b9190611c5a565b925050819055503073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610eb8573d6000803e3d6000fd5b506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156110b7573373ffffffffffffffffffffffffffffffffffffffff166108fc66038d7ea4c68000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f6d9190611c00565b9081150290604051600060405180830381858888f19350505050158015610f98573d6000803e3d6000fd5b506002600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fe59190611bcf565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506032600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156110b6576032600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b611277565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506002600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111929190611c00565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506103e8600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410611276576001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5b6001905090565b600060011515600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415611314576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130b90611a24565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411611396576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138d906119e4565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611418576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140f90611aa4565b60405180910390fd5b6000670de0b6b3a76400008361142e9190611c00565b90506103e866038d7ea4c68000826114469190611bcf565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114909190611c00565b61149a9190611bcf565b66038d7ea4c68000346114ad9190611bcf565b146114ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114e490611a04565b60405180910390fd5b42600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506103e866038d7ea4c68000826115479190611bcf565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103e86115949190611b79565b61159e9190611c00565b6115a89190611bcf565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506103e866038d7ea4c68000826116019190611bcf565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461164b9190611c00565b6116559190611bcf565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156116de573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611725573d6000803e3d6000fd5b506001915050919050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008135905061179581612052565b92915050565b6000813590506117aa81612069565b92915050565b6000602082840312156117c6576117c5611d34565b5b60006117d484828501611786565b91505092915050565b6000602082840312156117f3576117f2611d34565b5b60006118018482850161179b565b91505092915050565b61181381611ca0565b82525050565b6000611826604183611b68565b915061183182611d39565b606082019050919050565b6000611849603d83611b68565b915061185482611dae565b604082019050919050565b600061186c602683611b68565b915061187782611dfd565b604082019050919050565b600061188f602d83611b68565b915061189a82611e4c565b604082019050919050565b60006118b2600f83611b68565b91506118bd82611e9b565b602082019050919050565b60006118d5603183611b68565b91506118e082611ec4565b604082019050919050565b60006118f8601d83611b68565b915061190382611f13565b602082019050919050565b600061191b602783611b68565b915061192682611f3c565b604082019050919050565b600061193e602883611b68565b915061194982611f8b565b604082019050919050565b6000611961602083611b68565b915061196c82611fda565b602082019050919050565b6000611984602e83611b68565b915061198f82612003565b604082019050919050565b6119a381611ccc565b82525050565b60006020820190506119be600083018461180a565b92915050565b600060208201905081810360008301526119dd81611819565b9050919050565b600060208201905081810360008301526119fd8161183c565b9050919050565b60006020820190508181036000830152611a1d8161185f565b9050919050565b60006020820190508181036000830152611a3d81611882565b9050919050565b60006020820190508181036000830152611a5d816118a5565b9050919050565b60006020820190508181036000830152611a7d816118c8565b9050919050565b60006020820190508181036000830152611a9d816118eb565b9050919050565b60006020820190508181036000830152611abd8161190e565b9050919050565b60006020820190508181036000830152611add81611931565b9050919050565b60006020820190508181036000830152611afd81611954565b9050919050565b60006020820190508181036000830152611b1d81611977565b9050919050565b6000602082019050611b39600083018461199a565b92915050565b6000604082019050611b54600083018561199a565b611b61602083018461199a565b9392505050565b600082825260208201905092915050565b6000611b8482611ccc565b9150611b8f83611ccc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611bc457611bc3611cd6565b5b828201905092915050565b6000611bda82611ccc565b9150611be583611ccc565b925082611bf557611bf4611d05565b5b828204905092915050565b6000611c0b82611ccc565b9150611c1683611ccc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611c4f57611c4e611cd6565b5b828202905092915050565b6000611c6582611ccc565b9150611c7083611ccc565b925082821015611c8357611c82611cd6565b5b828203905092915050565b6000611c9982611cac565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f596f75206861766520616c72656164792070726f7669646564206c697175696460008201527f69747920616e64206d757374207761697420746f20646f20697420616761696e60208201527f2e00000000000000000000000000000000000000000000000000000000000000604082015250565b7f546869732075736572206861736e27742072656769737465726564207965742c60008201527f20706c6561736520726567697374657220796f75722077616c6c65742e000000602082015250565b7f54686520616d6f756e74206f6620636f6c6c61746572616c2069736e2774206560008201527f6e6f7567682e0000000000000000000000000000000000000000000000000000602082015250565b7f5468697320626f72726f7765722063616e6e6f7420626520747275737465642c60008201527f206c6f616e2064656e6965642e00000000000000000000000000000000000000602082015250565b7f55736572206e6f7420666f756e642e0000000000000000000000000000000000600082015250565b7f4e6f206c6971756964697479207761732070726f766964656420746f20636f6c60008201527f6c65637420696e746572657374206f6e2e000000000000000000000000000000602082015250565b7f546865206c6f616e20697320616c72656164792070616964206f66662e000000600082015250565b7f5468697320706572736f6e2068617320616c726561647920626f72726f77656460008201527f2065746865722e00000000000000000000000000000000000000000000000000602082015250565b7f596f75206e65656420746f207761697420756e74696c20746865206c6f616e2060008201527f657870697265732e000000000000000000000000000000000000000000000000602082015250565b7f54686973207573657220697320616c726561647920726567697374657265642e600082015250565b7f4c656e64206973206f7574206f662072656465656d61626c6520746f6b656e7360008201527f20617420746869732074696d652e000000000000000000000000000000000000602082015250565b61205b81611c8e565b811461206657600080fd5b50565b61207281611ccc565b811461207d57600080fd5b5056fea264697066735822122058f9477936e20e23640e7de8a07d15913cdce5ffe4f9169d73384391435ec67664736f6c63430008070033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4,
        "contract": "contracts/Lend.sol:Lend",
        "label": "LendJTokenBalance",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 8,
        "contract": "contracts/Lend.sol:Lend",
        "label": "Worthiness",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 12,
        "contract": "contracts/Lend.sol:Lend",
        "label": "Staked",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 16,
        "contract": "contracts/Lend.sol:Lend",
        "label": "TimeStaked",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 20,
        "contract": "contracts/Lend.sol:Lend",
        "label": "Borrowed",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 24,
        "contract": "contracts/Lend.sol:Lend",
        "label": "Debt",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 28,
        "contract": "contracts/Lend.sol:Lend",
        "label": "Collateral",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 32,
        "contract": "contracts/Lend.sol:Lend",
        "label": "Blacklist",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}